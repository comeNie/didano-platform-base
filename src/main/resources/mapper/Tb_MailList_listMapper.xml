<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.didano.base.dao.Tb_MailList_listMapper">
  <select id="findByTeacher" parameterType="Integer" resultType="cn.didano.base.model.Tb_mailList_list">
    SELECT a.* FROM tb_student a,tb_staff_class b WHERE b.staff_id=#{id} AND a.class_id=b.class_id  AND a.deleted =0 AND b.deleted=0 ORDER BY CONVERT( a.name USING gbk )
</select> 
 <select id="findAll" resultType="cn.didano.base.model.Tb_mailList_list">
 SELECT a.id,a.class_id,a.name,a.birthday,a.gender FROM tb_student a WHERE   a.deleted =0  ORDER BY CONVERT( a.name USING gbk )
  </select>
 
 <select id="findById" parameterType="Integer" resultType="cn.didano.base.model.Tb_mailList_list"> 
 SELECT a.id,a.class_id,a.name,a.birthday,a.gender FROM tb_student a WHERE  a.id=#{id} AND a.deleted =0 ORDER BY CONVERT( a.name USING gbk )
 </select>
<select id="findClassIdBySid" parameterType="Integer" resultType="cn.didano.base.model.Tb_staff">
   SELECT class_id FROM tb_staff_class WHERE staff_id = #{id}
</select> 
 <select id="findByName"  parameterType="cn.didano.base.model.Tb_studentData" resultType="cn.didano.base.model.Tb_mailList_list">
   select * from tb_student where name like #{name} and school_id=#{schoolid} and deleted=0 ORDER BY CONVERT( NAME USING gbk )
 </select>
 <select id="findByNameClass"  parameterType="cn.didano.base.model.Tb_studentData" resultType="cn.didano.base.model.Tb_mailList_list">
   select * from tb_student where name like #{name} and class_id=#{schoolid} and deleted=0 ORDER BY CONVERT( NAME USING gbk )
 </select>
 <select id="findByschool" parameterType="Integer" resultType="cn.didano.base.model.Tb_mailList_list">
  SELECT * FROM tb_student WHERE school_id=#{id} ORDER BY class_id ORDER BY CONVERT( NAME USING gbk )
 </select>
 <select id="findClassByschool" parameterType="Integer" resultType="cn.didano.base.model.Tb_class">
  SELECT tmp2.relation_id, tmp2.parent_id,tmp2.id,tmp2.SchoolId,tmp2.class_id ,tmp2.title,tmp2.name,tmp2.gender,tmp2.birthday ,tmp2.parent_name ,d.phone AS parent_phone FROM (SELECT c.relation_id, c.parent_id,tmp1.id,tmp1.SchoolId,tmp1.class_id ,tmp1.title,tmp1.name,tmp1.gender,tmp1.birthday ,c.relation_title AS parent_name 
    FROM (SELECT a.id,a.school_id AS SchoolId,a.class_id ,b.title,a.name,a.gender,a.birthday 
 FROM tb_student a,tb_class b  WHERE a.school_id = #{id} AND a.deleted=0 AND a.class_id=b.id  )
 AS tmp1 LEFT JOIN tb_student_parent c ON tmp1.id = c.student_id AND c.deleted=0 ORDER BY CONVERT( tmp1.name USING gbk )) AS tmp2 LEFT JOIN tb_school_parent d
 ON tmp2.parent_id = d.id
 
 </select>
 <select id="findteacherByschool" parameterType="Integer" resultType="cn.didano.base.model.Tb_teacher">
SELECT tmp1.status,tmp1.in_time,tmp1.out_time,tmp1.id,tmp1.name,tmp1.phone,tmp1.class_id,c.title,tmp1.type,tmp1.school_id FROM
(SELECT a.status,a.id,b.class_id,a.type,a.school_id,a.name,a.phone,c.in_time,c.out_time
FROM tb_staff a,tb_staff_class b ,tb_sign_type c WHERE a.school_id=#{id} AND a.deleted=0 AND a.type =32 and a.id=b.staff_id and a.sign_type_id=c.id
)AS tmp1 LEFT JOIN tb_class c ON tmp1.class_id=c.id ORDER BY CONVERT( tmp1.name USING gbk )


  
 </select>
 <select id="findrelation" resultType="cn.didano.base.model.Tb_relation">
      select id,title from tb_relation
  </select>
  <select id="findrelationById" parameterType="byte" resultType="cn.didano.base.model.Tb_relation">
     select id,title from tb_relation where id=#{id}
  </select>
<select id="findParentById" parameterType="Integer" resultType="cn.didano.base.model.Tb_parent">
SELECT p.id,tmp2.relation_id ,tmp2.title AS parent_name,p.phone AS parent_phone FROM 
(SELECT p.relation_id,tmp1.id,tmp1.name,p.relation_title AS title,tmp1.birthday,tmp1.gender,tmp1.class_id,p.parent_id AS parent_id FROM 
 tb_student  AS tmp1 ,tb_student_parent p  WHERE tmp1.id=p.student_id AND tmp1.id=#{id}  and p.deleted=0 and tmp1.deleted=0)
 AS tmp2 LEFT JOIN tb_school_parent p ON tmp2.parent_id=p.id
</select>
<select id="findByClass" parameterType="Integer" resultType="cn.didano.base.model.Tb_mailList_list">
  SELECT a.* FROM tb_student a WHERE  a.class_id=#{id} AND a.deleted =0 ORDER BY CONVERT( a.name USING gbk )
 </select>
<select id="findTeacherByClass" parameterType="Integer" resultType="cn.didano.base.model.Tb_teacher">
  SELECT  tmp1.title,tmp1.status,tmp1.school_id,tmp1.id,tmp1.name,tmp1.type,tmp1.phone,tmp1.class_id ,c.in_time,c.out_time FROM 
	 (SELECT c.title,a.status,a.sign_type_id,a.school_id,a.id,a.name,a.phone,a.type,b.class_id FROM tb_staff a,tb_staff_class b ,tb_class c
	 WHERE a.type=32 AND a.id=b.staff_id  AND a.deleted=0 AND b.deleted=0 AND b.class_id=c.id ) AS tmp1 
	 LEFT JOIN tb_sign_type c ON (tmp1.sign_type_id =c.id)
	 WHERE  class_id=#{id} ORDER BY CONVERT( tmp1.name USING gbk )
</select>
<select id="findBystaffbyId" parameterType="Integer" resultType="cn.didano.base.model.Tb_staff4MailList">
 SELECT c.title,a.status,a.sign_type_id,a.school_id,a.id,a.name,a.phone,a.type,b.class_id FROM tb_staff a,tb_staff_class b ,tb_class c
	 WHERE a.type=32 AND a.id=b.staff_id  AND a.deleted=0  AND b.class_id=c.id AND a.id=#{id} ORDER BY CONVERT( a.name USING gbk )
</select>
<select id="findTeacherByNameClass" parameterType="cn.didano.base.model.Tb_staffData" resultType="cn.didano.base.model.Tb_staff"> 
    SELECT  tmp1.title,tmp1.status,tmp1.school_id,tmp1.id,tmp1.name,tmp1.type,tmp1.phone,tmp1.class_id ,c.in_time,c.out_time FROM 
	 (SELECT c.title,a.status,a.sign_type_id,a.school_id,a.id,a.name,a.phone,a.type,b.class_id FROM tb_staff a,tb_staff_class b ,tb_class c
	 WHERE a.type=32 AND a.id=b.staff_id  AND a.deleted=0 AND b.deleted=0 AND b.class_id=c.id AND a.name LIKE #{name}) AS tmp1 
	 LEFT JOIN tb_sign_type c ON (tmp1.sign_type_id =c.id)
	 WHERE  class_id=#{class_id} ORDER BY CONVERT( tmp1.name USING gbk )
</select>
<select id="findParentByPid" parameterType="Integer" resultType="cn.didano.base.model.Tb_parent">
   SELECT * FROM tb_school_parent where id=#{id}
</select>
<update id="Update" parameterType="cn.didano.base.model.Tb_mailList_list">UPDATE tb_student a SET a.name=#{name},a.class_id=#{class_id},a.gender=#{gender,jdbcType=TINYINT},a.birthday=#{birthday,jdbcType=DATE} where a.id=#{id}</update>

<update id="delete" parameterType="Integer">
UPDATE tb_student AS a SET a.deleted=1 WHERE a.id=#{id} 
</update>


<update id="UpdateParent" parameterType="cn.didano.base.model.Tb_parent">
  UPDATE tb_school_parent a,tb_student_parent b SET a.phone=#{parent_phone}, b.relation_id =#{relation_id},b.relation_title=#{parent_name} where a.id = #{id} and b.parent_id=#{id}
</update>

<update id="UpdateTeacher" parameterType="cn.didano.base.model.Tb_teacher">
  UPDATE TB_STAFF a,tb_staff_class b,tb_staff_signdate c SET a.type = #{type},a.name=#{name},a.phone=#{phone} ,a.deleted=#{deleted},b.class_id=#{class_id},
c.set_intime=#{in_time},c.set_outtime=#{out_time} where a.id = #{id} 
</update>
<update id="deleteparent" parameterType="Integer">
  UPDATE tb_school_parent a,tb_student_parent b SET a.deleted=1 ,b.deleted = 1 WHERE
   a.id IN (SELECT * FROM(SELECT parent_id FROM tb_student_parent WHERE student_id=#{id})a) 
   AND b.student_id=#{id}
</update>
<update id="deleteparentByid" parameterType="cn.didano.base.model.Tb_deleteParentDate">
 UPDATE tb_school_parent a,tb_student_parent b SET a.deleted=1 ,b.deleted = 1 WHERE
   a.id =#{parent_id} and b.parent_id=#{parent_id} and b.student_id = #{student_id}
</update>
</mapper>