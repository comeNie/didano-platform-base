<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.didano.base.dao.Tb_student_detectionMapper">
  <resultMap id="BaseResultMap" type="cn.didano.base.model.Tb_student_detection">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="student_id" jdbcType="INTEGER" property="studentId" />
    <result column="height" jdbcType="INTEGER" property="height" />
    <result column="weight" jdbcType="INTEGER" property="weight" />
    <result column="state_type" jdbcType="INTEGER" property="stateType" />
    <result column="recognition_type" jdbcType="INTEGER" property="recognitionType" />
    <result column="env_temperature" jdbcType="REAL" property="envTemperature" />
    <result column="raw_temperature" jdbcType="REAL" property="rawTemperature" />
    <result column="temperature_threshold" jdbcType="REAL" property="temperatureThreshold" />
    <result column="first" jdbcType="TINYINT" property="first" />
    <result column="lastest" jdbcType="TINYINT" property="lastest" />
    <result column="terminal_img_id" jdbcType="VARCHAR" property="terminalImgId" />
    <result column="file_img_id" jdbcType="INTEGER" property="fileImgId" />
    <result column="org_img_url" jdbcType="VARCHAR" property="orgImgUrl" />
    <result column="weichat_num" jdbcType="INTEGER" property="weichatNum" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="created" jdbcType="TIMESTAMP" property="created" />
    <result column="updated" jdbcType="TIMESTAMP" property="updated" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, student_id, height, weight, state_type, recognition_type, env_temperature, raw_temperature, 
    temperature_threshold, first, lastest, terminal_img_id, file_img_id, org_img_url, 
    weichat_num, status, created, updated
  </sql>
  <select id="selectByExample" parameterType="cn.didano.base.model.Tb_student_detectionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from tb_student_detection
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_student_detection
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_student_detection
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.didano.base.model.Tb_student_detectionExample">
    delete from tb_student_detection
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.didano.base.model.Tb_student_detection">
    insert into tb_student_detection (id, student_id, height, 
      weight, state_type, recognition_type, 
      env_temperature, raw_temperature, temperature_threshold, 
      first, lastest, terminal_img_id, 
      file_img_id, org_img_url, weichat_num, 
      status, created, updated
      )
    values (#{id,jdbcType=INTEGER}, #{studentId,jdbcType=INTEGER}, #{height,jdbcType=INTEGER}, 
      #{weight,jdbcType=INTEGER}, #{stateType,jdbcType=INTEGER}, #{recognitionType,jdbcType=INTEGER}, 
      #{envTemperature,jdbcType=REAL}, #{rawTemperature,jdbcType=REAL}, #{temperatureThreshold,jdbcType=REAL}, 
      #{first,jdbcType=TINYINT}, #{lastest,jdbcType=TINYINT}, #{terminalImgId,jdbcType=VARCHAR}, 
      #{fileImgId,jdbcType=INTEGER}, #{orgImgUrl,jdbcType=VARCHAR}, #{weichatNum,jdbcType=INTEGER}, 
      #{status,jdbcType=TINYINT}, #{created,jdbcType=TIMESTAMP}, #{updated,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.didano.base.model.Tb_student_detection">
    insert into tb_student_detection
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="studentId != null">
        student_id,
      </if>
      <if test="height != null">
        height,
      </if>
      <if test="weight != null">
        weight,
      </if>
      <if test="stateType != null">
        state_type,
      </if>
      <if test="recognitionType != null">
        recognition_type,
      </if>
      <if test="envTemperature != null">
        env_temperature,
      </if>
      <if test="rawTemperature != null">
        raw_temperature,
      </if>
      <if test="temperatureThreshold != null">
        temperature_threshold,
      </if>
      <if test="first != null">
        first,
      </if>
      <if test="lastest != null">
        lastest,
      </if>
      <if test="terminalImgId != null">
        terminal_img_id,
      </if>
      <if test="fileImgId != null">
        file_img_id,
      </if>
      <if test="orgImgUrl != null">
        org_img_url,
      </if>
      <if test="weichatNum != null">
        weichat_num,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="updated != null">
        updated,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="height != null">
        #{height,jdbcType=INTEGER},
      </if>
      <if test="weight != null">
        #{weight,jdbcType=INTEGER},
      </if>
      <if test="stateType != null">
        #{stateType,jdbcType=INTEGER},
      </if>
      <if test="recognitionType != null">
        #{recognitionType,jdbcType=INTEGER},
      </if>
      <if test="envTemperature != null">
        #{envTemperature,jdbcType=REAL},
      </if>
      <if test="rawTemperature != null">
        #{rawTemperature,jdbcType=REAL},
      </if>
      <if test="temperatureThreshold != null">
        #{temperatureThreshold,jdbcType=REAL},
      </if>
      <if test="first != null">
        #{first,jdbcType=TINYINT},
      </if>
      <if test="lastest != null">
        #{lastest,jdbcType=TINYINT},
      </if>
      <if test="terminalImgId != null">
        #{terminalImgId,jdbcType=VARCHAR},
      </if>
      <if test="fileImgId != null">
        #{fileImgId,jdbcType=INTEGER},
      </if>
      <if test="orgImgUrl != null">
        #{orgImgUrl,jdbcType=VARCHAR},
      </if>
      <if test="weichatNum != null">
        #{weichatNum,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="created != null">
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null">
        #{updated,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.didano.base.model.Tb_student_detectionExample" resultType="java.lang.Long">
    select count(*) from tb_student_detection
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_student_detection
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.studentId != null">
        student_id = #{record.studentId,jdbcType=INTEGER},
      </if>
      <if test="record.height != null">
        height = #{record.height,jdbcType=INTEGER},
      </if>
      <if test="record.weight != null">
        weight = #{record.weight,jdbcType=INTEGER},
      </if>
      <if test="record.stateType != null">
        state_type = #{record.stateType,jdbcType=INTEGER},
      </if>
      <if test="record.recognitionType != null">
        recognition_type = #{record.recognitionType,jdbcType=INTEGER},
      </if>
      <if test="record.envTemperature != null">
        env_temperature = #{record.envTemperature,jdbcType=REAL},
      </if>
      <if test="record.rawTemperature != null">
        raw_temperature = #{record.rawTemperature,jdbcType=REAL},
      </if>
      <if test="record.temperatureThreshold != null">
        temperature_threshold = #{record.temperatureThreshold,jdbcType=REAL},
      </if>
      <if test="record.first != null">
        first = #{record.first,jdbcType=TINYINT},
      </if>
      <if test="record.lastest != null">
        lastest = #{record.lastest,jdbcType=TINYINT},
      </if>
      <if test="record.terminalImgId != null">
        terminal_img_id = #{record.terminalImgId,jdbcType=VARCHAR},
      </if>
      <if test="record.fileImgId != null">
        file_img_id = #{record.fileImgId,jdbcType=INTEGER},
      </if>
      <if test="record.orgImgUrl != null">
        org_img_url = #{record.orgImgUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.weichatNum != null">
        weichat_num = #{record.weichatNum,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.created != null">
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updated != null">
        updated = #{record.updated,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_student_detection
    set id = #{record.id,jdbcType=INTEGER},
      student_id = #{record.studentId,jdbcType=INTEGER},
      height = #{record.height,jdbcType=INTEGER},
      weight = #{record.weight,jdbcType=INTEGER},
      state_type = #{record.stateType,jdbcType=INTEGER},
      recognition_type = #{record.recognitionType,jdbcType=INTEGER},
      env_temperature = #{record.envTemperature,jdbcType=REAL},
      raw_temperature = #{record.rawTemperature,jdbcType=REAL},
      temperature_threshold = #{record.temperatureThreshold,jdbcType=REAL},
      first = #{record.first,jdbcType=TINYINT},
      lastest = #{record.lastest,jdbcType=TINYINT},
      terminal_img_id = #{record.terminalImgId,jdbcType=VARCHAR},
      file_img_id = #{record.fileImgId,jdbcType=INTEGER},
      org_img_url = #{record.orgImgUrl,jdbcType=VARCHAR},
      weichat_num = #{record.weichatNum,jdbcType=INTEGER},
      status = #{record.status,jdbcType=TINYINT},
      created = #{record.created,jdbcType=TIMESTAMP},
      updated = #{record.updated,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.didano.base.model.Tb_student_detection">
    update tb_student_detection
    <set>
      <if test="studentId != null">
        student_id = #{studentId,jdbcType=INTEGER},
      </if>
      <if test="height != null">
        height = #{height,jdbcType=INTEGER},
      </if>
      <if test="weight != null">
        weight = #{weight,jdbcType=INTEGER},
      </if>
      <if test="stateType != null">
        state_type = #{stateType,jdbcType=INTEGER},
      </if>
      <if test="recognitionType != null">
        recognition_type = #{recognitionType,jdbcType=INTEGER},
      </if>
      <if test="envTemperature != null">
        env_temperature = #{envTemperature,jdbcType=REAL},
      </if>
      <if test="rawTemperature != null">
        raw_temperature = #{rawTemperature,jdbcType=REAL},
      </if>
      <if test="temperatureThreshold != null">
        temperature_threshold = #{temperatureThreshold,jdbcType=REAL},
      </if>
      <if test="first != null">
        first = #{first,jdbcType=TINYINT},
      </if>
      <if test="lastest != null">
        lastest = #{lastest,jdbcType=TINYINT},
      </if>
      <if test="terminalImgId != null">
        terminal_img_id = #{terminalImgId,jdbcType=VARCHAR},
      </if>
      <if test="fileImgId != null">
        file_img_id = #{fileImgId,jdbcType=INTEGER},
      </if>
      <if test="orgImgUrl != null">
        org_img_url = #{orgImgUrl,jdbcType=VARCHAR},
      </if>
      <if test="weichatNum != null">
        weichat_num = #{weichatNum,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null">
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.didano.base.model.Tb_student_detection">
    update tb_student_detection
    set student_id = #{studentId,jdbcType=INTEGER},
      height = #{height,jdbcType=INTEGER},
      weight = #{weight,jdbcType=INTEGER},
      state_type = #{stateType,jdbcType=INTEGER},
      recognition_type = #{recognitionType,jdbcType=INTEGER},
      env_temperature = #{envTemperature,jdbcType=REAL},
      raw_temperature = #{rawTemperature,jdbcType=REAL},
      temperature_threshold = #{temperatureThreshold,jdbcType=REAL},
      first = #{first,jdbcType=TINYINT},
      lastest = #{lastest,jdbcType=TINYINT},
      terminal_img_id = #{terminalImgId,jdbcType=VARCHAR},
      file_img_id = #{fileImgId,jdbcType=INTEGER},
      org_img_url = #{orgImgUrl,jdbcType=VARCHAR},
      weichat_num = #{weichatNum,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      created = #{created,jdbcType=TIMESTAMP},
      updated = #{updated,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>