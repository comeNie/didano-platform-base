<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.didano.base.dao.Tb_studentparentMapper">
  <resultMap id="BaseResultMap" type="cn.didano.base.model.Tb_studentparent">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="school_id" jdbcType="INTEGER" property="schoolId" />
    <result column="class_id" jdbcType="INTEGER" property="classId" />
    <result column="student_id" jdbcType="INTEGER" property="studentId" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="rfid" jdbcType="VARCHAR" property="rfid" />
    <result column="relation_id" jdbcType="TINYINT" property="relationId" />
    <result column="relation_title" jdbcType="VARCHAR" property="relationTitle" />
    <result column="qrcode_url" jdbcType="VARCHAR" property="qrcodeUrl" />
    <result column="qrcode_school_key" jdbcType="VARCHAR" property="qrcodeSchoolKey" />
    <result column="created" jdbcType="TIMESTAMP" property="created" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, school_id, class_id, student_id, parent_id, rfid, relation_id, relation_title, 
    qrcode_url, qrcode_school_key, created
  </sql>
  <select id="selectByExample" parameterType="cn.didano.base.model.Tb_studentparentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from tb_student_parent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_student_parent
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_student_parent
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.didano.base.model.Tb_studentparentExample">
    delete from tb_student_parent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.didano.base.model.Tb_studentparent">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_student_parent (school_id, class_id, student_id, 
      parent_id, rfid, relation_id, 
      relation_title, qrcode_url, qrcode_school_key, 
      created)
    values (#{schoolId,jdbcType=INTEGER}, #{classId,jdbcType=INTEGER}, #{studentId,jdbcType=INTEGER}, 
      #{parentId,jdbcType=INTEGER}, #{rfid,jdbcType=VARCHAR}, #{relationId,jdbcType=TINYINT}, 
      #{relationTitle,jdbcType=VARCHAR}, #{qrcodeUrl,jdbcType=VARCHAR}, #{qrcodeSchoolKey,jdbcType=VARCHAR}, 
      #{created,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.didano.base.model.Tb_studentparent">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_student_parent
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="schoolId != null">
        school_id,
      </if>
      <if test="classId != null">
        class_id,
      </if>
      <if test="studentId != null">
        student_id,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="rfid != null">
        rfid,
      </if>
      <if test="relationId != null">
        relation_id,
      </if>
      <if test="relationTitle != null">
        relation_title,
      </if>
      <if test="qrcodeUrl != null">
        qrcode_url,
      </if>
      <if test="qrcodeSchoolKey != null">
        qrcode_school_key,
      </if>
      <if test="created != null">
        created,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="schoolId != null">
        #{schoolId,jdbcType=INTEGER},
      </if>
      <if test="classId != null">
        #{classId,jdbcType=INTEGER},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="rfid != null">
        #{rfid,jdbcType=VARCHAR},
      </if>
      <if test="relationId != null">
        #{relationId,jdbcType=TINYINT},
      </if>
      <if test="relationTitle != null">
        #{relationTitle,jdbcType=VARCHAR},
      </if>
      <if test="qrcodeUrl != null">
        #{qrcodeUrl,jdbcType=VARCHAR},
      </if>
      <if test="qrcodeSchoolKey != null">
        #{qrcodeSchoolKey,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        #{created,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.didano.base.model.Tb_studentparentExample" resultType="java.lang.Long">
    select count(*) from tb_student_parent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_student_parent
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.schoolId != null">
        school_id = #{record.schoolId,jdbcType=INTEGER},
      </if>
      <if test="record.classId != null">
        class_id = #{record.classId,jdbcType=INTEGER},
      </if>
      <if test="record.studentId != null">
        student_id = #{record.studentId,jdbcType=INTEGER},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=INTEGER},
      </if>
      <if test="record.rfid != null">
        rfid = #{record.rfid,jdbcType=VARCHAR},
      </if>
      <if test="record.relationId != null">
        relation_id = #{record.relationId,jdbcType=TINYINT},
      </if>
      <if test="record.relationTitle != null">
        relation_title = #{record.relationTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.qrcodeUrl != null">
        qrcode_url = #{record.qrcodeUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.qrcodeSchoolKey != null">
        qrcode_school_key = #{record.qrcodeSchoolKey,jdbcType=VARCHAR},
      </if>
      <if test="record.created != null">
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_student_parent
    set id = #{record.id,jdbcType=INTEGER},
      school_id = #{record.schoolId,jdbcType=INTEGER},
      class_id = #{record.classId,jdbcType=INTEGER},
      student_id = #{record.studentId,jdbcType=INTEGER},
      parent_id = #{record.parentId,jdbcType=INTEGER},
      rfid = #{record.rfid,jdbcType=VARCHAR},
      relation_id = #{record.relationId,jdbcType=TINYINT},
      relation_title = #{record.relationTitle,jdbcType=VARCHAR},
      qrcode_url = #{record.qrcodeUrl,jdbcType=VARCHAR},
      qrcode_school_key = #{record.qrcodeSchoolKey,jdbcType=VARCHAR},
      created = #{record.created,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.didano.base.model.Tb_studentparent">
    update tb_student_parent
    <set>
      <if test="schoolId != null">
        school_id = #{schoolId,jdbcType=INTEGER},
      </if>
      <if test="classId != null">
        class_id = #{classId,jdbcType=INTEGER},
      </if>
      <if test="studentId != null">
        student_id = #{studentId,jdbcType=INTEGER},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="rfid != null">
        rfid = #{rfid,jdbcType=VARCHAR},
      </if>
      <if test="relationId != null">
        relation_id = #{relationId,jdbcType=TINYINT},
      </if>
      <if test="relationTitle != null">
        relation_title = #{relationTitle,jdbcType=VARCHAR},
      </if>
      <if test="qrcodeUrl != null">
        qrcode_url = #{qrcodeUrl,jdbcType=VARCHAR},
      </if>
      <if test="qrcodeSchoolKey != null">
        qrcode_school_key = #{qrcodeSchoolKey,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.didano.base.model.Tb_studentparent">
    update tb_student_parent
    set school_id = #{schoolId,jdbcType=INTEGER},
      class_id = #{classId,jdbcType=INTEGER},
      student_id = #{studentId,jdbcType=INTEGER},
      parent_id = #{parentId,jdbcType=INTEGER},
      rfid = #{rfid,jdbcType=VARCHAR},
      relation_id = #{relationId,jdbcType=TINYINT},
      relation_title = #{relationTitle,jdbcType=VARCHAR},
      qrcode_url = #{qrcodeUrl,jdbcType=VARCHAR},
      qrcode_school_key = #{qrcodeSchoolKey,jdbcType=VARCHAR},
      created = #{created,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>